#!/bin/bash
# SCRIPT QUE COPIA DE 3 FUENTES A 1 DESTINO
#
######################
#    CONFIGURACIÓN   #
######################
#
# set -e break if a error happen

#set -e

# Config File

. ./mdialog_conf

#######################
#  FIN CONFIGURACIÓN  #
#######################

# submenu
# Updating database of files and dirs

submenu () {
  clear
  local PS3='Por favor escoga una opción: '
  local options=("Películas" "Música" "JUegos" "Apps" "Libros" "Comics" "Volver")
  local opt
  select opt in "${options[@]}"
  do
      case $opt in
          "Películas")
              if [ -f $fallrepos -a -d "$fsourcepath" ]; then
		find "$fsourcepath" -type f > "$fallrepos"
		find "$fsourcepath2" -type f >> "$fallrepos"
		find "$fsourcepath3" -type f >> "$fallrepos"
    find "$fsourcepath4" -type f >> "$fallrepos"
    find "$fsourcepath5" -type f >> "$fallrepos"
    find "$fsourcepath6" -type f >> "$fallrepos"
    find "$fsourcepath7" -type f >> "$fallrepos"
    find "$fsourcepath8" -type f >> "$fallrepos"
    find "$fsourcepath9" -type f >> "$fallrepos"
    find "$fsourcepath10" -type f >> "$fallrepos"
		result=$(echo "DB Películas fallrepos Updated - Base de datos de Películas Actualizado")
                display_result "INFORME"
              else
                result=$(echo "Falló Actualización de las Películas,\n
revise la configuración de mdialog_conf\n
y las variables:\n\n
Db's Film\n
fallrepos\n
fallrepos2\n
fallrepos3\n\n
Paths\n
fsourcepath\n
fsourcepath2\n
fsourcepath3\n")
                display_result "INFORME DB PELÍCULAS"
              fi
              ;;
          "Música")
              if [ -f "$mallrepos" -a -d "$msourcepath" ]; then
		find "$msourcepath" -type d > "$mallrepos"
		find "$msourcepath2" -type d >> "$mallrepos"
		find "$msourcepath3" -type d >> "$mallrepos"
                result=$(echo "DB Music mallrepos Updated - Base de datos de Música Actualizada")
                display_result "INFORME"
              else
                result=$(echo "Falló Actualización de mallrepos, revise la configuración mdialog_conf")
                display_result "INFORME DB MÚSICA"
              fi
              ;;
          "Juegos")
              if [ -f "$jallrepos" -a -d "$jsourcepath" ]; then
		find "$jsourcepath" -type d > "$jallrepos"
		find "$jsourcepath2" -type d >> "$jallrepos"
		find "$jsourcepath3" -type d >> "$jallrepos"
                result=$(echo "DB Apps jallrepos Updated - Base de datos de Juegos Actualizada")
                display_result "INFORME"
              else
                result=$(echo "Falló Actualización de jallrepos, revise la configuración mdialog_conf")
                display_result "INFORME DB JUEGOS"
              fi
              ;;
          "Apps")
              if [ -f "$aallrepos" -a -d "$asourcepath" ]; then
		find "$asourcepath" -type d > "$aallrepos"
		find "$asourcepath2" -type d >> "$aallrepos"
		find "$asourcepath3" -type d >> "$aallrepos"
                result=$(echo "DB Apps aallrepos Updated - Base de datos de Apps Actualizada")
                display_result "INFORME"
              else
                result=$(echo "Falló Actualización de aallrepos, revise la configuración mdialog_conf")
                display_result "INFORME DB APPS"
              fi
              ;;
          "Libros")
              if [ -f $lallrepos -a -d "$lsourcepath" ] ; then
		find "$lsourcepath" -type f > "$lallrepos"
		find "$lsourcepath2" -type f >> "$lallrepos"
		find "$lsourcepath3" -type f >> "$lallrepos"
                result=$(echo "DB Películas lallrepos Updated - Base de datos de los Libros Actualizado")
                display_result "INFORME"
              else
                result=$(echo "Falló Actualización de los Libros,\n
revise la configuración de mdialog_conf\n
y las variables:\n
lallrepos\n
lsourcepath")
                display_result "INFORME DB LIBROS"
              fi
              ;;
          "Comics")
              if [ -f $callrepos -a -d "$csourcepath" ] ; then
		find "$csourcepath" -type f > "$callrepos"
		find "$csourcepath2" -type f >> "$callrepos"
		find "$csourcepath3" -type f >> "$callrepos"
                result=$(echo "DB Películas callrepos Updated - Base de datos de Comics Actualizado")
                display_result "INFORME"
              else
                result=$(echo "Falló Actualización de los Comics,\n
revise la configuración de mdialog_conf\n
y las variables:\n
callrepos\n
csourcepath")
                display_result "INFORME DB COMICS"
              fi
              ;;
          "Volver")
              return
              ;;
          *) echo "invalid option $REPLY";;
      esac
      return
  done
}

# submenulogs

submenulogs () {
  clear
  local PS3='Por favor escoga una opción: '
  local options=("Copiados" "Fallidos" "Volver")
  local opt
  select opt in "${options[@]}"
  do
      case $opt in
          "Copiados")
	    test -f "$copiadoslog"
	    dialog --clear --title "Log Copiados" --textbox "$copiadoslog" 0 0
	    ;;
	  "Fallidos")
	    test -f "$fallidoslog"
	    dialog --clear --title "Log Fallidos" --textbox "$fallidoslog" 0 0
	    ;;
	  "Volver")
	    return
	    ;;
	  *) echo "Opción Inválida $REPLY";;
      esac
      return
  done
}
# while-menu-dialog: a menu driven system information program

# Status Button
DIALOG_CANCEL=1
DIALOG_ESC=255
HEIGHT=19
WIDTH=0

display_result() {
  dialog --title "$1" \
    --no-collapse \
    --msgbox "$result" 0 0
}

# MENU

while true; do
  exec 3>&1
  selection=$(dialog \
    --backtitle "Panel del Sistema" \
    --title "Menu" \
    --cancel-label "Salir" \
    --help-button \
    --menu "Seleccione una Opción:" "$HEIGHT" "$WIDTH" 4 \
    "1" "Listar Dispositivos Montados" \
    "2" "Listar las palabras para buscar y copiar" \
    "3" "Películas" \
    "4" "Música" \
    "5" "Juegos" \
    "6" "Apps" \
    "7" "Libros" \
    "8" "Comics" \
    "9" "Actualizar Bases de Datos" \
    "0" "Ver Archivos Copiados/Fallidos" \
    "10" "Configuración" \
    2>&1 1>&3)
    exit_status=$?
    exec 3>&-
    
# Button Status

  case $exit_status in
    $DIALOG_CANCEL)
      clear
      echo "Programa Terminado"
      exit
      ;;
    $DIALOG_ESC)
      clear
      echo "Programa Abortado" >&2
      exit 1
      ;;
  esac
  case $selection in
    1)
      result=$(lsblk -o +UUID,PARTUUID)
      display_result "Dispositivos Montados"
      ;;
    2)
      origen=$(dialog --stdout --title "Ruta Archivo db:" --fselect "$dialogorig" 15 125)
      pedido=$(cat "$origen")
      dialog --no-collapse --title "Lista de Pedido" --msgbox "$pedido" 0 0
      ;;
    3)
# MOVIES BY FILM ID
      counterc=0
      counterf=0
      regdate=$(date)
      cliente=$(dialog --stdout --title "Datos Cliente:" --inputbox "Nombre y Apellido (Prefijo):" 0 0)
      logcopy=$(echo -e "\n\n--Cliente: $cliente - $regdate" >> "$copiadoslog")
      logrip=$(echo -e "\n\n--Cliente: $cliente - $regdate" >> "$fallidoslog")
      destino=$(dialog --stdout --title "Seleccionar Carpeta Destino:" --fselect "$dialogdest" 45 125)
      origen=$(dialog --stdout --title "Ruta Lista (ej. fcid.txt)" --fselect "$dialogorig" 45 65)
      sed -i '/^[[:space:]]*$/d' "$origen"
      lowtoupcase=$(sed -i "s/f/F/g" "$origen")
      exec < "$origen"
      while read -r line
      do
	lct=$(cat "$fallrepos" | grep -iwm 1 "$line") # Imprime con -i ignorando mayúsucalas, -w imprime la lína que coincide con la palabra entera, -m imprime la línea con la primer coincidencia
	lct2=$(grep -Piowm 1 "$line" "$fallrepos") # Extráe solo la palabra lct(F####) con -o usando regex de Pearl con -P, -m 1 para que imprima la primera coincidencia y no replique los repetidos en el archivo fallrepos
	if [ "$lct2" == "$line" ]; then
	  fuente=$(grep -Piwm 1 "$line" "$fallrepos") # Imprimiendo la línea completa de fallrepos que contiene $line
	  rsync -ah --info=progress2 --log-file="$rsynclog" "$fuente" "$destino"
	  copiados=$(echo -e "  * $line" >> "$copiadoslog")
	  let counterc=counterc+1
	else
	  fallidos=$(echo -e "  * $line" >> "$fallidoslog")
	  let counterf=counterf+1
	fi
      done
      let totalpedido=counterc+counterf
      pedido=$(cat "$origen")
      dialog --title "Copia Finalizada" \
      --msgbox "\n
	  ------------ Rutas ------------\n
        Lista ID's  : $origen\n
            Destino : $destino\n
	  ------------ Items ------------\n
       ----------------+-----\n
        Total Pedidos  |  $totalpedido   \n
       ----------------+-----\n
        Total Copiados |  $counterc   \n
       ----------------+-----\n
        total Fallidos |  $counterf   \n
       ----------------+-----\n
      Items Pedidos:\n
      $pedido\n\n" 0 0
      exec cat -n "$copiadoslog"
      ;;
    4)
# MUSIC BY FOLDER ALBUM
      counterc=0
      counterf=0
      regdate=$(date)
      cliente=$(dialog --stdout --title "Datos Cliente:" --inputbox "Nombre y Apellido (Prefijo):" 0 0)
      logcopy=$(echo -e "\n\n--Cliente: $cliente - $regdate" >> "$copiadoslog")
      logrip=$(echo -e "\n\n--Cliente: $cliente - $regdate" >> "$fallidoslog")
      destino=$(dialog --stdout --title "Seleccionar Carpeta Destino:" --fselect "$dialogdest" 45 125)
      origen=$(dialog --stdout --title "Ruta Lista (ej. mcid.txt)" --fselect "$dialogorig" 45 65)
      sed -i '/^[[:space:]]*$/d' "$origen"
      lowtoupcase=$(sed -i "s/m/M/g" "$origen")
      exec < "$origen"
      while read -r line
      do
	lct=$(cat "$mallrepos" | grep -iwm 1 "$line")
	lct2=$(grep -Piowm 1 "$line" "$mallrepos") # Extráe solo la palabra lct(M####) con -o usando regex de Pearl con -P, -m 1 para que imprima la primera coincidencia y no replique los repetidos en el archivo mallrepos
	if [ "$lct2" == "$line" ]; then
	  fuente=$(grep -Piwm 1 "$line" "$mallrepos")
	  rsync -ah --info=progress2 --log-file="$rsynclog" "$fuente" "$destino"
	  copiados=$(echo -e "  * $line" >> "$copiadoslog")
	  let counterc=counterc+1
	else
	  fallidos=$(echo -e "  * $line" >> "$fallidoslog")
	  let counterf=counterf+1
	fi
      done
      let totalpedido=counterc+counterf
      pedido=$(cat "$origen")
      dialog --title "Copia Finalizada" \
      --msgbox "\n
    6)
	  ------------ Rutas ------------\n
        Lista ID's  : $origen\n
            Destino : $destino\n
	  ------------ Items ------------\n
       ----------------+-----\n
        Total Pedidos  |  $totalpedido   \n
       ----------------+-----\n
        Total Copiados |  $counterc   \n
       ----------------+-----\n
        total Fallidos |  $counterf   \n
       ----------------+-----\n
      Items Pedidos:\n
      $pedido\n\n" 0 0
      exec cat -n "$copiadoslog"
      ;;
    5)
# JUEGOS BY FOLDER    
      counterc=0
      counterf=0
      regdate=$(date)
      cliente=$(dialog --stdout --title "Datos Cliente:" --inputbox "Nombre y Apellido (Prefijo):" 0 0)
      logcopy=$(echo -e "\n\n--Cliente: $cliente - $regdate" >> "$copiadoslog")
      logrip=$(echo -e "\n\n--Cliente: $cliente - $regdate" >> "$fallidoslog")
      destino=$(dialog --stdout --title "Seleccionar Carpeta Destino:" --fselect "$dialogdest" 45 125)
      origen=$(dialog --stdout --title "Ruta Lista (ej. jcid.txt)" --fselect "$dialogorig" 45 65)
      sed -i '/^[[:space:]]*$/d' "$origen"
      lowtoupcase=$(sed -i "s/j/J/g" "$origen")
      exec < "$origen"
      while read -r line
	do
	lct=$(cat "$jallrepos" | grep -iwm 1 "$line")
	lct2=$(grep -Piowm 1 "$line+" "$jallrepos") # Extráe solo la palabra lct(J####) con -o usando regex de Pearl con -P, -m 1 para que imprima la primera coincidencia y no replique los repetidos en el archivo jallrepos
	if [ "$lct2" == "$line" ]; then
	  fuente=$(grep -Piwm 1 "$line" "$jallrepos")
	  rsync -ah --info=progress2 --log-file="$rsynclog" "$fuente" "$destino"
	  copiados=$(echo -e "  * $line" >> "$copiadoslog")
	  let counterc=counterc+1
	else
	  fallidos=$(echo -e "  * $line" >> "$fallidoslog")
	  let counterf=counterf+1
	fi
      done
      let totalpedido=counterc+counterf
      pedido=$(cat "$origen")
      dialog --title "Copia Finalizada" \
      --msgbox "\n
	  ------------ Rutas ------------\n
        Lista ID's  : $origen\n
            Destino : $destino\n
	  ------------ Items ------------\n
       ----------------+-----\n
        Total Pedidos  |  $totalpedido   \n
       ----------------+-----\n
        Total Copiados |  $counterc   \n
       ----------------+-----\n
        total Fallidos |  $counterf   \n
       ----------------+-----\n
      Items Pedidos:\n
      $pedido\n\n" 0 0
      exec cat -n "$copiadoslog"
      ;;
    6)
# APPS BY FOLDER
      counterc=0
      counterf=0
      regdate=$(date)
      cliente=$(dialog --stdout --title "Datos Cliente:" --inputbox "Nombre y Apellido (Prefijo):" 0 0)
      logcopy=$(echo -e "\n\n--Cliente: $cliente - $regdate" >> "$copiadoslog")
      logrip=$(echo -e "\n\n--Cliente: $cliente - $regdate" >> "$fallidoslog")
      destino=$(dialog --stdout --title "Seleccionar Carpeta Destino:" --fselect "$dialogdest" 45 125)
      origen=$(dialog --stdout --title "Ruta Lista (ej. acid.txt)" --fselect "$dialogorig" 45 65)
      sed -i '/^[[:space:]]*$/d' "$origen"
      lowtoupcase=$(sed -i "s/a/A/g" "$origen")
      exec < "$origen"
      while read -r line
      do
	lct=$(cat "$aallrepos" | grep -iwm 1 "$line")
	lct2=$(grep -Piowm 1 "$line+" "$aallrepos") # Extráe solo la palabra lct(A####) con -o usando regex de Pearl con -P, -m 1 para que imprima la primera coincidencia y no replique los repetidos en el archivo aallrepos
	if [ "$lct2" == "$line" ]; then
	  fuente=$(grep -Piwm 1 "$line" "$aallrepos")
	  rsync -ah --info=progress2 --log-file="$rsynclog" "$fuente" "$destino"
	  copiados=$(echo -e "  * $line" >> "$copiadoslog")
	  let counterc=counterc+1
	else
	  fallidos=$(echo -e "  * $line" >> "$fallidoslog")
	  let counterf=counterf+1
	fi
      done
      let totalpedido=counterc+counterf
      pedido=$(cat "$origen")
      dialog --title "Copia Finalizada" \
      --msgbox "\n
	  ------------ Rutas ------------\n
        Lista ID's  : $origen\n
            Destino : $destino\n
	  ------------ Items ------------\n
       ----------------+-----\n
        Total Pedidos  |  $totalpedido   \n
       ----------------+-----\n
        Total Copiados |  $counterc   \n
       ----------------+-----\n
        total Fallidos |  $counterf   \n
       ----------------+-----\n
      Items Pedidos:\n
      $pedido\n\n" 0 0
      exec cat -n "$copiadoslog"
      ;;
    7)
# LIBROS BY BOOKs ID
      counterc=0
      counterf=0
      regdate=$(date)
      cliente=$(dialog --stdout --title "Datos Cliente:" --inputbox "Nombre y Apellido (Prefijo):" 0 0)
      logcopy=$(echo -e "\n\n--Cliente: $cliente - $regdate" >> "$copiadoslog")
      logrip=$(echo -e "\n\n--Cliente: $cliente - $regdate" >> "$fallidoslog")
      destino=$(dialog --stdout --title "Seleccionar Carpeta Destino:" --fselect "$dialogdest" 45 125)
      origen=$(dialog --stdout --title "Ruta Lista (ej. lcid.txt)" --fselect "$dialogorig" 45 65)
      sed -i '/^[[:space:]]*$/d' "$origen"
      lowtoupcase=$(sed -i "s/l/L/g" "$origen")
      exec < "$origen"
      while read -r line
      do
	lct=$(cat "$lallrepos" | grep -iwm 1 "$line")
	lct2=$(grep -Piowm 1 "$line+" "$lallrepos") # Extráe solo la palabra lct(L####) con -o usando regex de Pearl con -P, -m 1 para que imprima la primera coincidencia y no replique los repetidos en el archivo lallrepos
	if [ "$lct2" == "$line" ]; then
	  fuente=$(grep -Piwm 1 "$line" "$lallrepos")
	  rsync -ah --info=progress2 --log-file="$rsynclog" "$fuente" "$destino"
	  copiados=$(echo -e "  * $line" >> "$copiadoslog")
	  let counterc=counterc+1
	else
	  fallidos=$(echo -e "  * $line" >> "$fallidoslog")
	  let counterf=counterf+1
	fi
      done
      let totalpedido=counterc+counterf
      pedido=$(cat "$origen")
      dialog --title "Copia Finalizada" \
      --msgbox "\n
	  ------------ Rutas ------------\n
        Lista ID's  : $origen\n
            Destino : $destino\n
	  ------------ Items ------------\n
       ----------------+-----\n
        Total Pedidos  |  $totalpedido   \n
       ----------------+-----\n
        Total Copiados |  $counterc   \n
       ----------------+-----\n
        total Fallidos |  $counterf   \n
       ----------------+-----\n
      Items Pedidos:\n
      $pedido\n\n" 0 0
      exec cat -n "$copiadoslog"
      ;;
    8)
# COMICS BY COMICs ID
      counterc=0
      counterf=0
      regdate=$(date)
      cliente=$(dialog --stdout --title "Datos Cliente:" --inputbox "Nombre y Apellido (Prefijo):" 0 0)
      logcopy=$(echo -e "\n\n--Cliente: $cliente - $regdate" >> "$copiadoslog")
      logrip=$(echo -e "\n\n--Cliente: $cliente - $regdate" >> "$fallidoslog")
      destino=$(dialog --stdout --title "Seleccionar Carpeta Destino:" --fselect "$dialogdest" 45 125)
      origen=$(dialog --stdout --title "Ruta Lista (ej. ccid.txt)" --fselect "$dialogorig" 45 65)
      sed -i '/^[[:space:]]*$/d' "$origen"
      lowtoupcase=$(sed -i "s/c/C/g" "$origen")
      exec < "$origen"
      while read -r line
      do
	lct=$(cat "$callrepos" | grep -iwm 1 "$line")
	lct2=$(grep -Piowm 1 "$line+" "$callrepos") # Extráe solo la palabra lct(C####) con -o usando regex de Pearl con -P, -m 1 para que imprima la primera coincidencia y no replique los repetidos en el archivo callrepos
	if [ "$lct2" == "$line" ]; then
	  fuente=$(grep -Piwm 1 "$line" "$callrepos")
	  rsync -ah --info=progress2 --log-file="$rsynclog" "$fuente" "$destino"
	  copiados=$(echo -e "  * $line" >> "$copiadoslog")
	  let counterc=counterc+1
	else
	  fallidos=$(echo -e "  * $line" >> "$fallidoslog")
	  let counterf=counterf+1
	fi
      done
      let totalpedido=counterc+counterf
      pedido=$(cat "$origen")
      dialog --title "Copia Finalizada" \
      --msgbox "\n
	  ------------ Rutas ------------\n
        Lista ID's  : $origen\n
            Destino : $destino\n
	  ------------ Items ------------\n
       ----------------+-----\n
        Total Pedidos  |  $totalpedido   \n
       ----------------+-----\n
        Total Copiados |  $counterc   \n
       ----------------+-----\n
        total Fallidos |  $counterf   \n
       ----------------+-----\n
      Items Pedidos:\n
      $pedido\n\n" 0 0
      exec cat -n "$copiadoslog"
      ;;
    9)
      submenu
      ;;
    0)
      submenulogs
      ;;
    10)
      dialog --title "Configuraciones" --msgbox "\
      Paths Origin/Target\n
      Origin   : $dialogorig\n
      Target 1 : $dialogdest\n
      Target 2 : $dialogdest2\n
      Target 3 : $dialogdest3\n\\n
      Repository Paths\n\n
       Music Path Source: $msourcepath\n
        Film Path Source: $fsourcepath\n
       Film Path Source2: $fsourcepath2\n
       Film Path Source3: $fsourcepath3\n
       Film Path Source4: $fsourcepath4\n
       Film Path Source5: $fsourcepath5\n
       Film Path Source6: $fsourcepath6\n
       Film Path Source7: $fsourcepath7\n
       Film Path Source8: $fsourcepath8\n
       Film Path Source9: $fsourcepath9\n
      Film Path Source10: $fsourcepath10\n
      Comics Path Source: $csourcepath\n
        Book Path Source: $lsourcepath\n
        Game Path Source: $jsourcepath\n 
        Apps Path Source: $asourcepath\n\n
      Bases de Datos\n\n
      Music DB: $mallrepos\n
       Film DB: $fallrepos\n
      Comic DB: $callrepos\n
       Book DB: $lallrepos\n
       Game DB: $jallrepos\n
       Apps DB: $aallrepos\n\n" 31 81
      ;;
  esac
  return
done
